#!/bin/bash

install="$(dirname $(readlink -f $0))"

cmd=""
dir=""
extport=""
intport=""
name=""
hint=""
listarchive=""
ahost=""
n=0
user=pi
host=dax
connection="$user@$host"
host="$(echo $connection | sed -e 's/^.*@//')"
quiet=0
filter=""

function execute {
    ssh $connection sudo /var/lib/lxc/bin/appmgr $1 $2 $3 $4 $5
}

while [ "$1" != "" ];
do
    case "$1" in
        #opt/ -connect / user@host / use specified connection insted of default
        "-connect")
            if [ $n -ne 0 ]; then
                echo "$1 is a command and must be used at first place"
                exit 1
            fi
            shift
            if [ "$1" = "" ]; then
                echo "need connection"
                exit 1
            fi
            connection="$1"
            host="$(echo $connection | sed -e 's/^.*@//')"
            user="$(echo $connection | sed -e 's/@.*$//')"
            n=-1
            ;;
            #--------------------------
        #opt/ -dir / directory / deploy from specified directory
        "-dir")
            if [ $n -eq 0 ]; then
                echo "command missing"
                exit 1
            fi
            shift
            if [ ! -d "$1" ]; then
                echo "dir not found"
                exit 1
            fi
            dir="$1"
            ;;
            #--------------------------
        #opt/ -eport / portnum / route from guest port (requires -iport)
        "-eport")
            if [ $n -eq 0 ]; then
                echo "command missing"
                exit 1
            fi
            shift
            if [ "$1" = "" ]; then
                echo "need port"
                exit 1
            fi
            extport="$1"
            ;;
            #--------------------------
        #opt/ -iport / portnum / route to container port (requires -eport)
        "-iport")
            if [ $n -eq 0 ]; then
                echo "command missing"
                exit 1
            fi
            shift
            if [ "$1" = "" ]; then
                echo "need port"
                exit 1
            fi
            intport="$1"
            ;;
            #--------------------------
        #opt/ -name / name / name of the app to create
        "-name")
            if [ $n -eq 0 ]; then
                echo "command missing"
                exit 1
            fi
            shift
            if [ "$1" = "" ]; then
                echo "need string"
                exit 1
            fi
            name="$1"
            ;;
            #--------------------------
        #cmd/ -l /  / list all available apps
        "-l")
            if [ $n -ne 0 ]; then
                echo "$1 is a command and must be used at first place"
                exit 1
            fi
            cmd="list"
            ;;
            #--------------------------
        #opt/ -a /  / include archive in app listing
        "-a")
            listarchive="archive"
            ;;
            #--------------------------
        #cmd/ -lxc /  / list all lxc containers and their state
        "-lxc")
            if [ $n -ne 0 ]; then
                echo "$1 is a command and must be used at first place"
                exit 1
            fi
            shift 
            if [ "$1" != "" ]; then
                echo "this command takes no arguments"
                exit 1
            fi
            cmd="lxc"
            ;;
            #--------------------------
        #cmd/ -deploy / appID / deploy dir to app (-dir)
        "-deploy")
            if [ $n -ne 0 ]; then
                echo "$1 is a command and must be used at first place"
                exit 1
            fi
            shift
            appID=$1
            cmd="deploy"
            ;;
            #--------------------------
        #cmd/ -del / appID / delete specified app
        "-del")
            if [ $n -ne 0 ]; then
                echo "$1 is a command and must be used at first place"
                exit 1
            fi
            shift
            appID=$1
            cmd="delete"
            ;;
            #--------------------------
        #cmd/ -start / appID / start specified app
        "-start")
            if [ $n -ne 0 ]; then
                echo "$1 is a command and must be used at first place"
                exit 1
            fi
            shift
            appID=$1
            cmd="start"
            ;;
            #--------------------------
        #cmd/ -restart / appID / restart specified app
        "-restart")
            if [ $n -ne 0 ]; then
                echo "$1 is a command and must be used at first place"
                exit 1
            fi
            shift
            appID=$1
            cmd="restart"
            ;;
            #--------------------------
        #cmd/ -stop / appID / stop specified app
        "-stop")
            if [ $n -ne 0 ]; then
                echo "$1 is a command and must be used at first place"
                exit 1
            fi
            shift
            appID=$1
            cmd="stop"
            ;;
            #--------------------------
        #cmd/ -create /  / create app (opt: -name, -eport, -iport)
        "-create")
            if [ $n -ne 0 ]; then
                echo "$1 is a command and must be used at first place"
                exit 1
            fi
            cmd="create"
            ;;
            #--------------------------
        #cmd/ -onestop /  / create if app not exist, then deploy (-name -dir opt: -eport -iport)
        "-onestop")
            if [ $n -ne 0 ]; then
                echo "$1 is a command and must be used at first place"
                exit 1
            fi
            cmd="onestop"
            ;;
            #--------------------------
        #cmd/ -listfw / opt:filter / list guest firewall configuration, optional filter
        "-listfw")
            if [ $n -ne 0 ]; then
                echo "$1 is a command and must be used at first place"
                exit 1
            fi
            shift
            filter="$1"
            cmd="listfw"
            ;;
            #--------------------------
        #cmd/ -ssh / appID / ssh connect to specified app
        "-ssh")
            if [ $n -ne 0 ]; then
                echo "$1 is a command and must be used at first place"
                exit 1
            fi
            shift
            appID="$1"
            port="$(execute getport $appID)"
            cmd="ssh"
            ;;
            #--------------------------
        #cmd/ -archive / appID / archive specified app (opt: -hint)
        "-archive")
            if [ $n -ne 0 ]; then
                echo "$1 is a command and must be used at first place"
                exit 1
            fi
            cmd="archive"
            shift
            if [ "$1" = "" ]; then
                echo "need appID"
                exit 1
            fi
            appID="$1"
            ;;
            #--------------------------
        #opt/ -hint / appID / archive specified app
        "-hint")
            if [ $n -eq 0 ]; then
                echo "command missing"
                exit 1
            fi
            shift
            if [ "$1" = "" ]; then
                echo "need hint string"
                exit 1
            fi
            hint="$1"
            ;;
            #--------------------------
        #cmd/ -restore / archive / restore specified archive to app
        "-restore")
            if [ $n -ne 0 ]; then
                echo "$1 is a command and must be used at first place"
                exit 1
            fi
            shift
            archive="$1"
            cmd="restore"
            ;;
            #--------------------------
        #cmd/ -ansible / appID / get ansible host string for app (-ahost)
        "-ansible")
            if [ $n -ne 0 ]; then
                echo "$1 is a command and must be used at first place"
                exit 1
            fi
            shift
            appID="$1"
            if [ "$appID" = "" ]; then
               echo "need appID"
               exit 1
            fi 
            cmd="ansible"
            quiet=1
            ;;
            #--------------------------
        #cmd/ -ahost / appID / set ansible hostname
        "-ahost")
            shift
            ahost="$1"
            ;;
            #--------------------------
        #cmd/ -h / / print this help
        "-h")
            "$install/showhelp"
            exit
            ;;
            #--------------------------
        *)
            echo "unknown command: $1"
            exit 1
            ;;
            #--------------------------
    esac
    shift
    let n++
done

###########################################################################
if [ "$cmd" = "" ]; then
    $0 -h
    exit
fi

if [ $quiet -eq 0 ]; then
    echo "APPTheShelf v1.0, ($connection)"
    echo ""
fi

###########################################################################
cmdfile="$install/cmd/cmd_$cmd"
if [ ! -e "$cmdfile" ]; then
    echo "Command not implemented"
    exit 1
fi

. $cmdfile
echo ""

