#!/bin/bash 
###############################################################################
# AppTheShelf
# Elegant LXC remote container management
#
# Copyright:
# Stefan Koch <stefkoch@posteo.de>
#
# License: GPLv3
###############################################################################

desc="$1"
shift
if [ "$1" = "none" ]; then
    extport=""
else
    extport="$1"
fi
shift
if [ "$1" = "none" ]; then
    intport=""
else
    intport="$1"
fi
shift
if [ "$1" = "none" ]; then
    guestmount=""
else
    guestmount="$1"
fi
shift
if [ "$1" = "none" ]; then
    webspec=""
else
    webspec="$1"
fi
appdir=$(cat - << END
#name__mac_______________vent___vnet_ip_______guest_ip________ssh_forward
APPTS_APP_DIRECTORY
END
)

BASEDIR=/var/lib/lxc
cd $BASEDIR

#get all existing dirs
existing=$(ls -1 | grep '^app-[0-9]*$')

ignorelist="-v -e \#"
for dir in $existing;
do
    ignorelist="$ignorelist -e $dir"
done

nextfree=$(echo "$appdir" | grep $ignorelist | head -n 1)

if [ "$nextfree" = "" ]; then
    echo "no free container"
    exit 1
fi

name=$(   echo $nextfree | awk '{print $1}')
mac=$(    echo $nextfree | awk '{print $2}')
vnet=$(   echo $nextfree | awk '{print $3}')
router=$( echo $nextfree | awk '{print $4}')
guestip=$(echo $nextfree | awk '{print $5}')
sshforw=$(echo $nextfree | awk '{print $6}')

#echo "Next-free:"
#echo "name    = $name"
#echo "mac     = $mac"
#echo "vnet    = $vnet"
#echo "router  = $router"
#echo "guestip = $guestip"
#echo "sshforw = $sshforw"

if [ "$webspec" != "" ]; then
    URIredir=$(echo "$webspec" | awk -F ',' '{print $1}')
    servPort=$(echo "$webspec" | awk -F ',' '{print $2}')
    URIdesti=$(echo "$webspec" | awk -F ',' '{print $3}')
    IPredir=$guestip
    if [ "$URIredir" = "" ]; then
        echo "Error - need redirection URI"
        exit 1
    fi
    if [ "$servPort" != "" ]; then
        servPort=":$servPort"
    fi
    if [ "$URIdesti" != "" ]; then
        URIdesti="${URIdesti}/"
    fi
    echo "Web-Access URI=$URIredir DEST_IP=$IPredir DEST_PORT=$servPort DEST_URI=$URIdesti"
    mkdir -p /etc/nginx/appts
    echo "location /${URIredir}/ {proxy_pass http://${IPredir}${servPort}/$URIdesti;}" > /etc/nginx/appts/$desc.location
fi

if [ "$guestmount" != "" ]; then
    echo "Guest-mount: $guestmount"
    guestmount="lxc.mount.entry = $guestmount guest none ro,bind,create=dir 0 0"
    mkdir -p $name/rootfs/guest
fi

#create
mkdir -p $name
touch $name/is_appts
cat - > $name/config << END
lxc.start.auto = 1
lxc.start.delay = 5
lxc.hook.pre-start = /var/lib/lxc/bin/overlayup   \$LXC_NAME
lxc.hook.post-stop = /var/lib/lxc/bin/overlaydown \$LXC_NAME
lxc.network.type = veth
lxc.network.script.up = /var/lib/lxc/$name/vnetup
lxc.network.hwaddr = $mac
lxc.network.ipv4.gateway = $router
lxc.network.ipv4 = $guestip/24
lxc.network.veth.pair = $vnet
lxc.network.name = $vnet
lxc.network.flags = up
lxc.start.auto = 1
lxc.rootfs = /var/lib/lxc/$name/rootfs
lxc.include = /usr/share/lxc/config/debian.common.conf
lxc.mount = /var/lib/lxc/$name/fstab
$guestmount
lxc.utsname = $name
lxc.arch = armhf
lxc.autodev = 1
lxc.kmsg = 0
END
touch $name/fstab
undername=$(echo $name | sed -e 's/-/_/')
if [ "$intport" == "" ]; then 
#-------------------------------------------
cat - > $name/fw_setup.inc << END
function connect_$undername {
        IP=\$1
        connect_port $sshforw 22 \$IP tcp
}
connect_$undername $guestip
END
#-------------------------------------------
else
cat - > $name/fw_setup.inc << END
function connect_$undername {
        IP=\$1
        connect_port $sshforw 22 \$IP tcp
        connect_port $extport $intport \$IP tcp
}
connect_$undername $guestip
END
fi
#-------------------------------------------
cat - > $name/vnetup << END
ifconfig $vnet $router
END
mkdir -p $name/rootfs/etc
cat - > $name/rootfs/etc/hosts << END
127.0.0.1	localhost
::1		localhost ip6-localhost ip6-loopback
ff02::1		ip6-allnodes
ff02::2		ip6-allrouters
$guestip $name
END
echo "$name" > $name/rootfs/etc/hostname
echo "$desc" > $name/appts.name
chmod +x $name/vnetup
lxc-start -n $name -d
bin/fw-setup > /dev/null

echo "status=OK name=$name ssh=$sshforw"
